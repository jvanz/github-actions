---
name: Tag and Release on PR Merge

on:
  workflow_call:
    inputs:
      trigger_release:
        type: boolean
        description: "Tag and trigger release manually"
        required: false
        default: true
      policy-working-dir:
        description: "working directory under policies folder"
        required: false
        type: string
        default: ""

jobs:
  tag-and-release:
    if: >
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'TRIGGER-RELEASE') ||
      github.event.inputs.trigger_release == 'true'
    name: Tag and push, triggering release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # also checkout tags

      - name: Extract version from metadata.yml
        id: extract-version
        shell: bash
        run: |
          POLICY_DIR="${{ inputs.policy-working-dir }}"
          FILES=("metadata.yml" "metadata.yaml")
          VERSION=""
          for F in "${FILES[@]}"; do
            FILE="$F"
            if [ -n "$POLICY_DIR" ]; then
              if [ -f "$POLICY_DIR" ]; then
                echo "The policy directory does not exists: $POLICY_DIR"
                exit 1
              fi
              FILE="$POLICY_DIR/$F"
            fi
            if [ -f "$FILE" ]; then
              VERSION=$(yq e '.annotations."io.kubewarden.policy.version"' "$FILE")
              if [ -z "$VERSION" ]; then
                echo "annotation 'io.kubewarden.policy.version' is missing in $FILE"
                exit 1
              fi
              echo "found version $VERSION"
              echo "VERSION=$VERSION" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo "Error: metadata.yml or metadata.yaml not found" >&2
          exit 1

      - name: Configure Git author
        run: |
          git config user.name "Kubewarden bot"
          git config user.email "cncf-kubewarden-maintainers@lists.cncf.io"

      - name: Create and push tag
        if: ${{ inputs.policy-working-dir  == "" }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"

      - name: Trigger release workflow
        if: ${{ inputs.policy-working-dir  == "" }}
        run: gh workflow run release.yml --ref "v$VERSION"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create and push tag in a monorepo
        if: ${{ inputs.policy-working-dir  != "" }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a "${{inputs.policy-working-dir}}/v$VERSION" -m "Release version ${{inputs.policy-working-dir}}/v$VERSION"
          git push origin "${{inputs.policy-working-dir}}/v$VERSION"

      - name: Trigger release workflow in a monorepo
        if: ${{ inputs.policy-working-dir  != "" }}
        run: gh workflow run release.yml --ref "${{inputs.policy-working-dir}}/v$VERSION"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Delete branch corresponding to the PR
        if: github.event.pull_request.head.ref != 'main'
        run: |
          git push origin --delete ${{ github.event.pull_request.head.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
